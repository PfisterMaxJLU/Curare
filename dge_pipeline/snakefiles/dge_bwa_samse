from os import listdir
from os.path import isfile

GENOME="reference/dsm639.fasta"
GENOME_GFF="reference/dsm639.gff3"

rule all:
    input:
        "results/SRR942640_counts.txt",
        "results/SRR942641_counts.txt"

rule bwa_index:
    input:
        genome=GENOME
    output:
        GENOME+".amb",
        GENOME+".ann",
        GENOME+".bwt",
        GENOME+".pac",
        GENOME+".sa"
    shell:
        "bwa index {input.genome}"


rule bwa_aln:
    input:
        genome=GENOME,
        sample="{sample}.fastq",
        genome_index=GENOME+".amb"
    output:
        "{sample}.sai"
    threads: 
        8
    shell:
        "bwa aln -n 3 -t {threads} {input.genome} {input.sample} > {output}"

rule bwa_samse:
    input:
        genome=GENOME,
        read="{part1}.fastq",
        read_sai="{part1}.sai",
    output:
        "{part1}.sam"
    shell:
        "bwa samse {input.genome} {input.read_sai} {input.read} > {output}"

rule sam2bam:
    input:
        "{sample}.sam"
    output:
        "{sample}.bam",
    shell:
        "samtools view -F 4 -Sb {input} > {output}"

rule index_bam:
    input:
        "{sample}.bam"
    output:
        bam="results/{sample}.bam",
        bai="results/{sample}.bam.bai"
    threads:
        8
    shell:
        "samtools sort -@ {threads} -o {output.bam} {input} && samtools index {output.bam}"

rule count_reads:
    input:
        "results/{sample}.bam"
    output:
        "results/{sample}_counts.txt"
    threads:
        8
    shell:
        "htseq-count -f 'bam' -t 'CDS' -i 'ID' {input} {GENOME_GFF} > {output}"
