from os import listdir
from os.path import isfile

def getConditions():
    return set([seqRun['deseq2']['condition'] for seqRun in config['entries'].values()])

localrules: deseq2__create_conditions

rule all:
    input:
        "analyses/deseq2/counts.txt",
        "analyses/deseq2/counts_normalized.txt",
        "analyses/deseq2/deseq2.RData",
        expand('analyses/deseq2/summary/{COND}.xlsx', COND=getConditions())

rule summary_tsv_to_xslx:
    input:
        'analyses/deseq2/summary/{COND}.tsv'
    output:
        'analyses/deseq2/summary/{COND}.xlsx'
    params:
        number_conditions = len(getConditions())-1
    group:
        "deseq2"
    shell:
        "python3 lib/deseq2_summary_tsv_to_xlsx.py --tsv {input} --conditions {params.number_conditions} --gff '%%GFF_PATH%%' --identifier '%%GFF_FEATURE_NAME%%' "
        "--feature '%%GFF_FEATURE_TYPE%%' --attributes %%ATTRIBUTE_COLUMNS%% --output {output}"

rule count_reads:
    input:
        expand("mapping/{A}.bam", A=sorted(config['entries'].keys()))
    output:
        counts = "analyses/deseq2/counts.txt",
        summary = "analyses/deseq2/counts.txt.summary"
    group:
        "count_reads"
    threads:
        1
    log:
        log="analyses/deseq2/logs/featurecounts.log"
    shell:
        "featureCounts -T {threads} %%ADDITIONAL_FEATCOUNTS_OPTIONS%% -t '%%GFF_FEATURE_TYPE%%' -g '%%GFF_FEATURE_NAME%%' -a %%GFF_PATH%% -o {output.counts} {input} 2>&1 |"
        "tee {log}"

rule create_conditions:
    output:
        temp("analyses/deseq2/conditions.txt")
    run:
        with(open(output[0], 'w')) as output_file:
            for name in sorted(config['entries'].keys()):
                output_file.write('{}\t{}\n'.format(name, config['entries'][name]['deseq2']['condition']))

rule deseq2:
    input:
        counttable = "analyses/deseq2/counts.txt",
        conditions = "analyses/deseq2/conditions.txt",
        feature_counts_log = "analyses/deseq2/counts.txt.summary"
    output:
        dump="analyses/deseq2/deseq2.RData",
        counts_normalized="analyses/deseq2/counts_normalized.txt",
        correlation_heatmap="analyses/deseq2/correlation_heatmap.pdf",
        assignment_statistics="analyses/deseq2/counts_assignment.pdf",
        summary=expand('analyses/deseq2/summary/{COND}.tsv', COND=getConditions()),
        comparisons=directory("analyses/deseq2/deseq2_comparisons")
    group:
        "deseq2"
    params:
        output_folder="analyses/deseq2/"
    log:
        log="analyses/deseq2/logs/deseq2.log"
    threads:
        1
    shell:
        "R --vanilla --file=lib/deseq2_analysis.R --args --threads {threads} --counttable {input.counttable} --conditions {input.conditions} --output {params.output_folder} "
        "--featcounts-log {input.feature_counts_log} 2>&1 | tee -a {log.log}"
